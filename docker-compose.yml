version: '3.8'

services:
  openai-proxy:
    build: .
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data
    environment:
      - FLASK_ENV=production
      - FLASK_APP=run.py
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - openai-proxy-network

  # 可选：添加Redis用于缓存（如果需要）
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - openai-proxy-network

  # 可选：添加Nginx作为反向代理（如果需要）
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - openai-proxy
  #   restart: unless-stopped
  #   networks:
  #     - openai-proxy-network

volumes:
  # redis_data:
  openai-proxy-data:

networks:
  openai-proxy-network:
    driver: bridge